# -*- coding: utf-8 -*-
"""Copy of NST-IT15099600.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1piC17xbL211LEGe-KU-0-8PXSYG_gIiZ

# **Import TensorFlow and other libraries**
"""

import tensorflow_hub as hub
import tensorflow as tf
from matplotlib import pyplot as plt
import numpy as np
import cv2
from keras.preprocessing.image import ImageDataGenerator
import PIL

"""# **Load image stylization module**"""

model = hub.load('https://tfhub.dev/google/magenta/arbitrary-image-stylization-v1-256/2')

"""# **Connect to the dataset**"""

import pathlib
from google.colab import drive
drive.mount('/content/gdrive')

data_dir = "/content/gdrive/MyDrive/Neural Style Transfer"
data_dir = pathlib.Path(data_dir)

"""#**copy of the dataset available**"""

image_count = len(list(data_dir.glob('*/*.jpg')))
print(image_count)

"""# **Visualize the input**"""

def load_image(img_path):
    img = tf.io.read_file(img_path)
    img = tf.image.decode_image(img, channels=3)
    img = tf.image.convert_image_dtype(img, tf.float32)
    img = img[tf.newaxis, :]
    return img

"""#**Download images and choose a style image and a content image**"""

content_image = load_image('/content/gdrive/MyDrive/Neural Style Transfer/content_images/con2.jpg')
style_image = load_image('/content/gdrive/MyDrive/Neural Style Transfer/style_image/style3.jpg')

"""# **Visualize Output**"""

content_image.shape

plt.imshow(np.squeeze(style_image))
plt.show()


plt.imshow(np.squeeze(content_image))
plt.show()

"""# **Stylize Image**"""

stylized_image = model(tf.constant(content_image), tf.constant(style_image))[0]

plt.imshow(np.squeeze(stylized_image))
plt.show()

cv2.imwrite('generated_img.jpg', cv2.cvtColor(np.squeeze(stylized_image)*255, cv2.COLOR_BGR2RGB))

"""# **Download the Output image**"""

from google.colab import files

files.download('generated_img.jpg')